{"version":3,"file":"99_6438b08544594b136874.js","mappings":"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","sources":["webpack://CurrencyTracker/./src/components/CurrencySearch/styled.ts","webpack://CurrencyTracker/./src/components/CurrencySearch/index.tsx","webpack://CurrencyTracker/./src/hooks/useCurrencySearch.ts","webpack://CurrencyTracker/./src/components/CurrencySearch/config.ts","webpack://CurrencyTracker/./src/components/PageHeader/config.ts","webpack://CurrencyTracker/./src/components/PageHeader/styled.ts","webpack://CurrencyTracker/./src/components/PageHeader/index.tsx","webpack://CurrencyTracker/./src/hooks/useValidation.ts","webpack://CurrencyTracker/./src/components/UI/ValidatedInput/styled.ts","webpack://CurrencyTracker/./src/components/UI/ValidatedInput/index.tsx","webpack://CurrencyTracker/./src/hooks/useDebounce.ts","webpack://CurrencyTracker/./src/utils/formatPrice.ts","webpack://CurrencyTracker/./src/components/FinancialCard/styled.ts","webpack://CurrencyTracker/./src/components/FinancialCard/CurrencyCard/index.tsx","webpack://CurrencyTracker/./src/components/FinancialCard/StockCard/index.tsx","webpack://CurrencyTracker/./src/hooks/useResetConversion.ts","webpack://CurrencyTracker/./src/components/Modals/Exchange/config.ts","webpack://CurrencyTracker/./src/components/Modals/Exchange/styled.ts","webpack://CurrencyTracker/./src/components/Modals/Exchange/index.tsx","webpack://CurrencyTracker/./src/hooks/useExchange.ts","webpack://CurrencyTracker/./src/hooks/useDisableButton.ts","webpack://CurrencyTracker/./src/hooks/useModal.ts","webpack://CurrencyTracker/./src/hooks/usePreventBodyScroll.ts","webpack://CurrencyTracker/./src/store/selectors/stockSelector.ts","webpack://CurrencyTracker/./src/components/Financial/config.ts","webpack://CurrencyTracker/./src/components/Financial/styled.ts","webpack://CurrencyTracker/./src/components/Financial/index.tsx","webpack://CurrencyTracker/./src/pages/Home/styled.ts","webpack://CurrencyTracker/./src/pages/Home/index.tsx","webpack://CurrencyTracker/./src/constants/validation.ts","webpack://CurrencyTracker/./src/utils/validation.ts"],"sourcesContent":["import { styled } from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n\r\n  width: 100%;\r\n`;\r\n\r\nexport const Subscription = styled.p`\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  &:focus {\r\n    border: 2px solid ${({ theme }) => theme.colors.activeLink};\r\n  }\r\n`;\r\n\r\nexport const Dropdown = styled.ul`\r\n  position: absolute;\r\n  z-index: 1;\r\n\r\n  width: 100%;\r\n  max-height: ${({ theme }) => theme.size.elementSize.xs};\r\n  overflow-y: auto;\r\n\r\n  border-radius: 5px;\r\n\r\n  margin-top: ${({ theme }) => theme.spacing.s};\r\n`;\r\n\r\nexport const DropdownItem = styled.li`\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.activeLink};\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.xs};\r\n  }\r\n`;\r\n","import { memo, useEffect } from 'react';\r\nimport { useCurrencySearch } from '@hooks/useCurrencySearch';\r\n\r\nimport { inputSubscription, placeholder } from './config';\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  Input,\r\n  InputContainer,\r\n  Subscription,\r\n} from './styled';\r\nimport { CurrencySearchProps } from './types';\r\n\r\nconst CurrencySearch = (props: CurrencySearchProps) => {\r\n  const { excludedCurrency, defaultCurrency, onCurrencyChange } = props;\r\n\r\n  const {\r\n    searchText,\r\n    setSearchText,\r\n    isDropdown,\r\n    filteredCurrencies,\r\n    handleTextChange,\r\n    handleCurrencySelect,\r\n    handleDropdownOpen,\r\n    dropdownRef,\r\n  } = useCurrencySearch(excludedCurrency, onCurrencyChange);\r\n\r\n  useEffect(() => {\r\n    if (defaultCurrency) {\r\n      setSearchText(defaultCurrency);\r\n    }\r\n  }, [defaultCurrency, setSearchText]);\r\n\r\n  return (\r\n    <InputContainer>\r\n      <Subscription>{inputSubscription}</Subscription>\r\n      <Input\r\n        data-testid=\"currency-select-input\"\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={searchText}\r\n        onChange={handleTextChange}\r\n        onFocus={handleDropdownOpen}\r\n      />\r\n      <Dropdown ref={dropdownRef}>\r\n        {isDropdown &&\r\n          filteredCurrencies.map((currency) => (\r\n            <DropdownItem\r\n              key={currency.asset_id}\r\n              onClick={handleCurrencySelect(currency)}\r\n            >\r\n              {currency.name}\r\n            </DropdownItem>\r\n          ))}\r\n      </Dropdown>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport const MemoizedCurrencySearch = memo(CurrencySearch);\r\n","import { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport { useDebounce } from '@hooks/useDebounce';\r\nimport { useOutsideClick } from '@hooks/useOutsideClick';\r\nimport { selectFilterResultState } from '@store/selectors/currencySelector';\r\nimport { filterCurrencies } from '@store/slices/currencySlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Currency } from '@/types/financial';\r\n\r\nexport const useCurrencySearch = (\r\n  excludedCurrency: string,\r\n  onCurrencyChange: (currencyId: string) => void,\r\n) => {\r\n  const [searchText, setSearchText] = useState<string>('');\r\n  const [isDropdown, setIsDropdown] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const filteredCurrencies = useSelector(selectFilterResultState);\r\n\r\n  const searchItem = useDebounce({ value: searchText, delay: 300 });\r\n  const dropdownRef = useRef<HTMLUListElement | null>(null);\r\n\r\n  const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(event.target.value);\r\n    if (!isDropdown) {\r\n      setIsDropdown(true);\r\n    }\r\n  };\r\n\r\n  const handleDropdownClose = () => setIsDropdown(false);\r\n  const handleDropdownOpen = () => setIsDropdown(true);\r\n\r\n  const handleCurrencySelect = (currency: Currency) => () => {\r\n    setSearchText(currency.name);\r\n    handleDropdownClose();\r\n    onCurrencyChange(currency.asset_id);\r\n  };\r\n\r\n  useOutsideClick({\r\n    ref: dropdownRef,\r\n    handler: handleDropdownClose,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(filterCurrencies({ searchItem, excludedCurrency }));\r\n  }, [searchItem, excludedCurrency, dispatch]);\r\n\r\n  return {\r\n    searchText,\r\n    setSearchText,\r\n    isDropdown,\r\n    filteredCurrencies,\r\n    handleTextChange,\r\n    handleCurrencySelect,\r\n    handleDropdownOpen,\r\n    dropdownRef,\r\n  };\r\n};\r\n","export const inputSubscription = 'Currency:';\r\nexport const placeholder = 'Choose currency';\r\n","export const pageHeaderData = {\r\n  title: 'Modsen Currency Tracker',\r\n  subtitle: 'Quotes for the dollar and other international currencies.',\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n  margin: ${({ theme }) => theme.spacing.xl} 0;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  background: ${({ theme }) => theme.colors.gradientBackground};\r\n\r\n  padding: ${({ theme }) => theme.spacing.xl};\r\n\r\n  border-radius: 15px;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  text-align: end;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.l};\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-right: ${({ theme }) => theme.spacing['3xl']};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    text-align: center;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: ${({ theme }) => theme.font.fontSizes['3xl']};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.bold};\r\n\r\n  background: ${({ theme }) => theme.colors.gradientText};\r\n\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes['2xl']};\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.h3`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.l};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    margin: ${({ theme }) => theme.spacing.l} 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${({ theme }) => theme.size.imageSize['3xl']};\r\n  height: ${({ theme }) => theme.size.imageSize['3xl']};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    width: ${({ theme }) => theme.size.imageSize['2xl']};\r\n    height: ${({ theme }) => theme.size.imageSize['2xl']};\r\n  }\r\n`;\r\n","import CurrencyTrackerLogo from '@images/CurrencyTrackerLogo.svg';\r\n\r\nimport { pageHeaderData } from './config';\r\nimport { Container, Image, Subtitle, Title, TitleContainer } from './styled';\r\n\r\nexport const PageHeader = () => {\r\n  return (\r\n    <Container>\r\n      <TitleContainer>\r\n        <Title>{pageHeaderData.title}</Title>\r\n        <Subtitle>{pageHeaderData.subtitle}</Subtitle>\r\n      </TitleContainer>\r\n      <Image src={CurrencyTrackerLogo} />\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\ntype ValidationRule = (value: string) => string | null;\r\n\r\nexport const useValidation = (\r\n  value: string,\r\n  validationRules: ValidationRule[],\r\n) => {\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    for (const rule of validationRules) {\r\n      const error = rule(value);\r\n      if (error) {\r\n        setErrorMessage(error);\r\n        return;\r\n      }\r\n    }\r\n    setErrorMessage(null);\r\n  }, [value, validationRules]);\r\n\r\n  return errorMessage;\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  &:focus {\r\n    border: 2px solid ${({ theme }) => theme.colors.activeLink};\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: ${({ theme }) => theme.colors.errorText};\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n`;\r\n\r\nexport const Subscription = styled.p`\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n`;\r\n","import { ChangeEvent, memo, useCallback, useEffect, useState } from 'react';\r\nimport { useDebounce } from '@hooks/useDebounce';\r\nimport { useValidation } from '@hooks/useValidation';\r\n\r\nimport { ErrorMessage, Input, InputContainer, Subscription } from './styled';\r\nimport { ValidatedInputProps } from './types';\r\n\r\nconst ValidatedInput = (props: ValidatedInputProps) => {\r\n  const {\r\n    value,\r\n    onValueChange,\r\n    validationRules = [],\r\n    maxLength = 10,\r\n    debounceDelay = 300,\r\n    placeholder = '',\r\n    subscription = '',\r\n  } = props;\r\n\r\n  const [inputValue, setInputValue] = useState<string>(value);\r\n  const debouncedValue = useDebounce({\r\n    value: inputValue,\r\n    delay: debounceDelay,\r\n  });\r\n  const errorMessage = useValidation(debouncedValue, validationRules);\r\n\r\n  const handleChange = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const newValue = event.target.value;\r\n      if (newValue.length <= maxLength) {\r\n        setInputValue(newValue);\r\n      }\r\n    },\r\n    [maxLength],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (errorMessage === null) {\r\n      onValueChange(debouncedValue);\r\n    }\r\n  }, [debouncedValue, errorMessage, onValueChange]);\r\n\r\n  return (\r\n    <InputContainer>\r\n      {errorMessage ? (\r\n        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n      ) : (\r\n        <Subscription>{subscription}</Subscription>\r\n      )}\r\n\r\n      <Input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        maxLength={maxLength}\r\n        placeholder={placeholder}\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport const MemoizedValidatedInput = memo(ValidatedInput);\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { UseDebounceProps } from '@/types/hooks';\r\n\r\nexport const useDebounce = <T>({ value, delay }: UseDebounceProps<T>): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const debounceId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => clearTimeout(debounceId);\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n","export const formatPrice = (price: number, currencySymbol: string = '$') => {\r\n  return `${currencySymbol} ${price.toFixed(2)}`;\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 5px;\r\n\r\n  background: ${({ theme }) => theme.colors.cardBackground};\r\n\r\n  padding: ${({ theme }) => theme.spacing.l};\r\n\r\n  cursor: pointer;\r\n\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(95%);\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    padding: ${({ theme }) => theme.spacing.m};\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    padding: ${({ theme }) => theme.spacing.s};\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${({ theme }) => theme.size.imageSize.m};\r\n  height: ${({ theme }) => theme.size.imageSize.m};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  margin-left: ${({ theme }) => theme.spacing.m};\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.xs};\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize['2xs']};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  }\r\n`;\r\n\r\nexport const Rate = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  color: ${({ theme }) => theme.colors.cardText};\r\n\r\n  margin-top: ${({ theme }) => theme.spacing.s};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n    margin-top: ${({ theme }) => theme.spacing.xs};\r\n  }\r\n`;\r\n","import Dollar from '@images/quotes/Dollar.svg';\r\nimport { formatPrice } from '@utils/formatPrice';\r\n\r\nimport { CardContainer, Image, Info, Rate, Title } from '../styled';\r\nimport { CurrencyCardProps } from './types';\r\n\r\nexport const CurrencyCard = ({ financialItem }: CurrencyCardProps) => {\r\n  const { name, price_usd, icon_url } = financialItem;\r\n\r\n  const cardImage = icon_url ?? Dollar;\r\n  const formattedPrice = formatPrice(price_usd);\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Image src={cardImage} alt={name} />\r\n      <Info>\r\n        <Title>{name}</Title>\r\n        <Rate>{formattedPrice}</Rate>\r\n      </Info>\r\n    </CardContainer>\r\n  );\r\n};\r\n","import IFIX from '@images/stocks/IFIX.svg';\r\n\r\nimport { CardContainer, Image, Info, Rate, Title } from '../styled';\r\nimport { StockCardProps } from './types';\r\n\r\nexport const StockCard = ({ financialItem }: StockCardProps) => {\r\n  const { name, rate, image } = financialItem;\r\n\r\n  const cardImage = image ?? IFIX;\r\n  const formattedRate = rate + '%';\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Image src={cardImage} alt={name} />\r\n      <Info>\r\n        <Title>{name}</Title>\r\n        <Rate>{formattedRate}</Rate>\r\n      </Info>\r\n    </CardContainer>\r\n  );\r\n};\r\n","import { useAppDispatch } from '@store/hooks';\r\nimport { resetConversionResult } from '@store/slices/currencySlice';\r\n\r\nexport const useResetConversion = () => {\r\n  const dispatch = useAppDispatch();\r\n  const resetConversion = () => {\r\n    dispatch(resetConversionResult());\r\n  };\r\n\r\n  return { resetConversion };\r\n};\r\n","export const buttonsText = {\r\n  convertButtonText: 'Convert',\r\n  closeButtonText: 'Close',\r\n};\r\n\r\nexport const convertingText = 'Converting...';\r\n\r\nexport const validateInputParams = {\r\n  placeholder: 'Enter amount',\r\n  subscription: 'Amount to convert:',\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${({ theme }) => theme.colors.modalBackground};\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${({ theme }) => theme.colors.modalCardBackground};\r\n  padding: ${({ theme }) => theme.spacing.l};\r\n  border-radius: 5px;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize.s};\r\n    padding: ${({ theme }) => theme.spacing.s};\r\n    margin: 0 ${({ theme }) => theme.spacing.l};\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${({ theme }) => theme.size.imageSize.l};\r\n  height: ${({ theme }) => theme.size.imageSize.l};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n\r\n  margin-top: ${({ theme }) => theme.spacing.m};\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n  border-radius: 5px;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  }\r\n`;\r\n\r\nexport const Rate = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  color: ${({ theme }) => theme.colors.cardText};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  }\r\n`;\r\n\r\nexport const ResultContainer = styled.div`\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n`;\r\n\r\nexport const ResultSubscription = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.xs};\r\n  color: ${({ theme }) => theme.colors.text};\r\n`;\r\n\r\nexport const ResultText = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-top: ${({ theme }) => theme.spacing.s};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n\r\n  border-radius: 5px;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.xs};\r\n  width: 100%;\r\n\r\n  text-align: center;\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  cursor: pointer;\r\n\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(95%);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import { useCallback, useState } from 'react';\r\nimport { MemoizedCurrencySearch as CurrencySearch } from '@components/CurrencySearch';\r\nimport { MemoizedValidatedInput as ValidatedInput } from '@components/UI/ValidatedInput';\r\nimport { useDisableButton } from '@hooks/useDisableButton';\r\nimport { useExchange } from '@hooks/useExchange';\r\nimport { useResetConversion } from '@hooks/useResetConversion';\r\nimport Dollar from '@images/quotes/Dollar.svg';\r\nimport { formatPrice } from '@utils/formatPrice';\r\nimport { validateOnlyDigits } from '@utils/validation';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { buttonsText, convertingText, validateInputParams } from './config';\r\nimport {\r\n  Button,\r\n  ButtonContainer,\r\n  Image,\r\n  Info,\r\n  ModalContainer,\r\n  Overlay,\r\n  Rate,\r\n  ResultContainer,\r\n  ResultSubscription,\r\n  ResultText,\r\n  Title,\r\n} from './styled';\r\nimport { ExchangeModalProps } from './types';\r\n\r\nexport const ExchangeModal = (props: ExchangeModalProps) => {\r\n  const {\r\n    onClose,\r\n    currency: { asset_id, name, icon_url, price_usd },\r\n    modalRef,\r\n  } = props;\r\n\r\n  const cardImage = icon_url ?? Dollar;\r\n  const formattedPrice = formatPrice(price_usd);\r\n\r\n  const [selectedCurrency, setSelectedCurrency] = useState<string>('');\r\n  const [currencyAmount, setCurrencyAmount] = useState<string>('1');\r\n\r\n  const { resetConversion } = useResetConversion();\r\n\r\n  const { conversionResult, isConverting, conversionError, fetchExchangeRate } =\r\n    useExchange();\r\n\r\n  const numericCurrencyAmount = parseFloat(currencyAmount);\r\n\r\n  const isButtonDisabled = useDisableButton([\r\n    !!selectedCurrency,\r\n    numericCurrencyAmount > 0,\r\n    !isNaN(numericCurrencyAmount),\r\n  ]);\r\n\r\n  const handleCurrencyChange = useCallback(\r\n    (currencyName: string) => {\r\n      setSelectedCurrency(currencyName);\r\n      resetConversion();\r\n    },\r\n    [resetConversion],\r\n  );\r\n\r\n  const handleAmountChange = useCallback((newCurrencyAmount: string) => {\r\n    setCurrencyAmount(newCurrencyAmount);\r\n  }, []);\r\n\r\n  const handleConvert = () => {\r\n    if (\r\n      selectedCurrency &&\r\n      numericCurrencyAmount > 0 &&\r\n      !isNaN(numericCurrencyAmount)\r\n    ) {\r\n      fetchExchangeRate({\r\n        baseCurrency: asset_id,\r\n        amount: numericCurrencyAmount,\r\n        targetCurrency: selectedCurrency,\r\n      });\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <Overlay>\r\n      <ModalContainer ref={modalRef}>\r\n        <Image src={cardImage} alt={name} />\r\n        <Info>\r\n          <Title>{name}</Title>\r\n          <Rate>{formattedPrice}</Rate>\r\n        </Info>\r\n\r\n        <CurrencySearch\r\n          excludedCurrency={name}\r\n          onCurrencyChange={handleCurrencyChange}\r\n        />\r\n\r\n        <ValidatedInput\r\n          value={currencyAmount}\r\n          onValueChange={handleAmountChange}\r\n          placeholder={validateInputParams.placeholder}\r\n          subscription={validateInputParams.subscription}\r\n          validationRules={[validateOnlyDigits]}\r\n        />\r\n\r\n        {isConverting && (\r\n          <ResultContainer data-testid=\"converting-loader\">\r\n            <ResultText>{convertingText}</ResultText>\r\n          </ResultContainer>\r\n        )}\r\n\r\n        {conversionResult && (\r\n          <ResultContainer data-testid=\"converting-block\">\r\n            <ResultSubscription>{asset_id} =</ResultSubscription>\r\n            <ResultText>\r\n              {conversionResult} {selectedCurrency}\r\n            </ResultText>\r\n          </ResultContainer>\r\n        )}\r\n\r\n        {conversionError && (\r\n          <ResultContainer data-testid=\"converting-error\">\r\n            <ResultText>{conversionError}</ResultText>\r\n          </ResultContainer>\r\n        )}\r\n\r\n        <ButtonContainer>\r\n          <Button\r\n            data-testid=\"convert-button\"\r\n            onClick={handleConvert}\r\n            disabled={isButtonDisabled}\r\n          >\r\n            {buttonsText.convertButtonText}\r\n          </Button>\r\n          <Button onClick={onClose}>{buttonsText.closeButtonText}</Button>\r\n        </ButtonContainer>\r\n      </ModalContainer>\r\n    </Overlay>,\r\n    document.body,\r\n  );\r\n};\r\n","import { useAppDispatch, useAppSelector } from '@store/hooks';\r\nimport { selectConversionState } from '@store/selectors/currencySelector';\r\nimport { fetchExchangeRateThunk } from '@store/slices/currencySlice';\r\n\r\nimport { FetchExchangeRate } from '@/types/financial';\r\n\r\nexport const useExchange = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { conversionResult, isConverting, conversionError } = useAppSelector(\r\n    selectConversionState,\r\n  );\r\n  const fetchExchangeRate = ({\r\n    baseCurrency,\r\n    amount,\r\n    targetCurrency,\r\n  }: FetchExchangeRate) => {\r\n    dispatch(fetchExchangeRateThunk({ baseCurrency, amount, targetCurrency }));\r\n  };\r\n\r\n  return {\r\n    conversionResult,\r\n    isConverting,\r\n    conversionError,\r\n    fetchExchangeRate,\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useDisableButton = (conditions: boolean[]): boolean => {\r\n  const [isDisabled, setIsDisabled] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!conditions.every((condition) => condition));\r\n  }, [conditions]);\r\n\r\n  return isDisabled;\r\n};\r\n","import { useRef, useState } from 'react';\r\n\r\nimport { useOutsideClick } from './useOutsideClick';\r\nimport { usePreventBodyScroll } from './usePreventBodyScroll';\r\nimport { useResetConversion } from './useResetConversion';\r\n\r\nexport const useModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { resetConversion } = useResetConversion();\r\n\r\n  const handleOpen = () => setIsOpen(true);\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n    resetConversion();\r\n  };\r\n\r\n  useOutsideClick({ ref: modalRef, handler: handleClose });\r\n\r\n  usePreventBodyScroll(isOpen);\r\n\r\n  return { isOpen, handleOpen, handleClose, modalRef };\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nexport const usePreventBodyScroll = (isOpen: boolean) => {\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const scrollBarWidth =\r\n        window.innerWidth - document.documentElement.clientWidth;\r\n      document.body.style.overflow = 'hidden';\r\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\r\n    } else {\r\n      document.body.style.overflow = '';\r\n      document.body.style.paddingRight = '';\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = '';\r\n      document.body.style.paddingRight = '';\r\n    };\r\n  }, [isOpen]);\r\n};\r\n","import { RootState } from '@/store';\r\n\r\nexport const selectStocksState = (state: RootState) => state.stocks.stocks;\r\n","export const sectionTitles = {\r\n  quotes: 'Quotes',\r\n  stocks: 'Stocks',\r\n};\r\n\r\nexport const updatedTitle = 'Last updated at:';\r\n","import { styled } from 'styled-components';\r\n\r\nexport const FinancialSection = styled.section`\r\n  max-width: ${({ theme }) => theme.size.elementSize.xl};\r\n  width: 100%;\r\n\r\n  margin: ${({ theme }) => theme.spacing.xl} 0;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  margin: ${({ theme }) => theme.spacing.xl} 0;\r\n\r\n  padding-bottom: ${({ theme }) => theme.spacing.s};\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`;\r\n\r\nexport const GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 40px;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    grid-template-columns: 1fr;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const TimerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.xs};\r\n`;\r\n\r\nexport const Timer = styled.h1`\r\n  text-align: center;\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n`;\r\n","import { useState } from 'react';\r\nimport { CurrencyCard } from '@components/FinancialCard/CurrencyCard';\r\nimport { StockCard } from '@components/FinancialCard/StockCard';\r\nimport { ExchangeModal } from '@components/Modals/Exchange';\r\nimport { useModal } from '@hooks/useModal';\r\nimport { selectCurrenciesState } from '@store/selectors/currencySelector';\r\nimport { selectStocksState } from '@store/selectors/stockSelector';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Currency } from '@/types/financial';\r\n\r\nimport { sectionTitles, updatedTitle } from './config';\r\nimport { FinancialSection, GridContainer, SectionTitle, Timer } from './styled';\r\n\r\nexport const Financial = () => {\r\n  const stocks = useSelector(selectStocksState);\r\n  const {\r\n    data: currencies,\r\n    error,\r\n    lastUpdated,\r\n  } = useSelector(selectCurrenciesState);\r\n  const { isOpen, handleOpen, handleClose, modalRef } = useModal();\r\n  const [selectedCurrency, setSelectedCurrency] = useState<Currency | null>(\r\n    null,\r\n  );\r\n\r\n  const handleCardClick = (currency: Currency) => {\r\n    setSelectedCurrency(currency);\r\n    handleOpen();\r\n  };\r\n\r\n  if (error) {\r\n    return <p data-testid=\"financial-error-message\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <FinancialSection>\r\n      <Timer>\r\n        {updatedTitle} {lastUpdated}\r\n      </Timer>\r\n\r\n      <SectionTitle>{sectionTitles.stocks}</SectionTitle>\r\n      {stocks && (\r\n        <GridContainer>\r\n          {stocks.map((stock) => (\r\n            <StockCard key={stock.id} financialItem={stock} />\r\n          ))}\r\n        </GridContainer>\r\n      )}\r\n\r\n      <SectionTitle>{sectionTitles.quotes}</SectionTitle>\r\n      {currencies && (\r\n        <GridContainer>\r\n          {currencies.map((currency) => (\r\n            <div\r\n              key={currency.asset_id}\r\n              onClick={() => handleCardClick(currency)}\r\n            >\r\n              <CurrencyCard financialItem={currency} />\r\n            </div>\r\n          ))}\r\n        </GridContainer>\r\n      )}\r\n\r\n      {isOpen && selectedCurrency && (\r\n        <ExchangeModal\r\n          onClose={handleClose}\r\n          currency={selectedCurrency}\r\n          modalRef={modalRef}\r\n        />\r\n      )}\r\n    </FinancialSection>\r\n  );\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { Financial } from '@components/Financial';\r\nimport { PageHeader } from '@components/PageHeader';\r\n\r\nimport { Container } from './styled';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Container>\r\n      <PageHeader />\r\n      <Financial />\r\n    </Container>\r\n  );\r\n};\r\n","export const validationRegex = {\r\n  onlyDigits: /^\\d+$/,\r\n};\r\n\r\nexport const validationErrorMessages = {\r\n  invalidCharacters: 'Invalid characters',\r\n  overMaxValue: 'Value over maximum',\r\n};\r\n","import {\r\n  validationErrorMessages,\r\n  validationRegex,\r\n} from '@constants/validation';\r\n\r\nexport const validateOnlyDigits = (value: string): string | null => {\r\n  if (isStringEmpty(value)) {\r\n    return null;\r\n  }\r\n\r\n  return validationRegex.onlyDigits.test(value)\r\n    ? null\r\n    : validationErrorMessages.invalidCharacters;\r\n};\r\n\r\nexport const validateMaxValue = (value: string): string | null => {\r\n  if (isStringEmpty(value)) {\r\n    return null;\r\n  }\r\n\r\n  const maxValue = 100;\r\n  const numericValue = parseInt(value, 10);\r\n  return numericValue <= maxValue ? null : validationErrorMessages.overMaxValue;\r\n};\r\n\r\nconst isStringEmpty = (value: string): boolean => {\r\n  return value.trim() === '';\r\n};\r\n"],"names":["InputContainer","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","size","elementSize","s","Subscription","p","_templateObject2","_ref2","spacing","_ref3","font","fontSizes","_ref4","colors","primaryText","Input","input","_templateObject3","_ref5","_ref6","_ref7","background","_ref8","_ref9","activeLink","Dropdown","ul","_templateObject4","_ref10","xs","_ref11","DropdownItem","li","_templateObject5","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","mediaQuery","mobile","_ref18","CurrencySearch","props","excludedCurrency","defaultCurrency","_useCurrencySearch","onCurrencyChange","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","isDropdown","setIsDropdown","dispatch","useDispatch","filteredCurrencies","useSelector","selectFilterResultState","searchItem","useDebounce","value","delay","dropdownRef","useRef","handleDropdownClose","useOutsideClick","ref","handler","useEffect","filterCurrencies","handleTextChange","event","target","handleCurrencySelect","currency","name","asset_id","handleDropdownOpen","useCurrencySearch","_jsxs","children","_jsx","type","placeholder","onChange","onFocus","map","onClick","MemoizedCurrencySearch","memo","pageHeaderData","Container","section","xl","gradientBackground","tablet","TitleContainer","l","Title","h1","fontWeights","bold","gradientText","Subtitle","h3","normal","Image","img","imageSize","_ref19","_ref20","_ref21","_ref22","PageHeader","src","CurrencyTrackerLogo","ErrorMessage","errorText","ValidatedInput","onValueChange","_props$validationRule","validationRules","_props$maxLength","maxLength","_props$debounceDelay","debounceDelay","_props$placeholder","_props$subscription","subscription","inputValue","setInputValue","debouncedValue","errorMessage","setErrorMessage","_step","_iterator","_createForOfIteratorHelper","n","done","error","rule","err","e","f","useValidation","handleChange","useCallback","newValue","length","MemoizedValidatedInput","setDebouncedValue","debounceId","setTimeout","clearTimeout","formatPrice","price","concat","arguments","undefined","toFixed","CardContainer","cardBorder","cardBackground","m","Info","Rate","cardText","_ref23","CurrencyCard","financialItem","price_usd","icon_url","cardImage","Dollar","formattedPrice","alt","StockCard","rate","image","IFIX","formattedRate","useResetConversion","useAppDispatch","resetConversion","resetConversionResult","buttonsText","validateInputParams","Overlay","modalBackground","ModalContainer","modalCardBackground","_templateObject6","_ref24","ResultContainer","_templateObject7","_ref25","_ref26","_ref27","ResultSubscription","_templateObject8","_ref28","_ref29","text","ResultText","_templateObject9","_ref30","_ref31","Button","button","_templateObject10","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","ButtonContainer","_templateObject11","_ref40","_ref41","ExchangeModal","_useAppSelector","onClose","_props$currency","modalRef","selectedCurrency","setSelectedCurrency","currencyAmount","setCurrencyAmount","_useExchange","conversionResult","useAppSelector","selectConversionState","isConverting","conversionError","fetchExchangeRate","baseCurrency","amount","targetCurrency","fetchExchangeRateThunk","numericCurrencyAmount","parseFloat","isButtonDisabled","conditions","isDisabled","setIsDisabled","every","condition","useDisableButton","isNaN","handleCurrencyChange","currencyName","handleAmountChange","newCurrencyAmount","createPortal","validateOnlyDigits","disabled","document","body","useModal","isOpen","setIsOpen","handleClose","scrollBarWidth","window","innerWidth","documentElement","clientWidth","style","overflow","paddingRight","usePreventBodyScroll","handleOpen","selectStocksState","state","stocks","sectionTitles","FinancialSection","SectionTitle","h2","GridContainer","Timer","Financial","_useSelector","selectCurrenciesState","currencies","data","lastUpdated","_useModal","stock","id","handleCardClick","Home","validationRegex","onlyDigits","validationErrorMessages","isStringEmpty","test","validateMaxValue","parseInt","trim"],"sourceRoot":""}