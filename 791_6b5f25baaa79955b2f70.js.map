{"version":3,"file":"791_6b5f25baaa79955b2f70.js","mappings":"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","sources":["webpack://CurrencyTracker/./src/components/CurrencySearch/styled.ts","webpack://CurrencyTracker/./src/components/CurrencySearch/index.tsx","webpack://CurrencyTracker/./src/hooks/useCurrencySearch.ts","webpack://CurrencyTracker/./src/components/CurrencySearch/config.ts","webpack://CurrencyTracker/./src/components/PageHeader/config.ts","webpack://CurrencyTracker/./src/components/PageHeader/styled.ts","webpack://CurrencyTracker/./src/components/PageHeader/index.tsx","webpack://CurrencyTracker/./src/hooks/useDebounce.ts","webpack://CurrencyTracker/./src/components/FinancialCard/styled.ts","webpack://CurrencyTracker/./src/components/FinancialCard/CurrencyCard/index.tsx","webpack://CurrencyTracker/./src/components/FinancialCard/StockCard/index.tsx","webpack://CurrencyTracker/./src/components/UI/CurrencyAmoutInput/config.ts","webpack://CurrencyTracker/./src/components/UI/CurrencyAmoutInput/styled.ts","webpack://CurrencyTracker/./src/components/UI/CurrencyAmoutInput/index.tsx","webpack://CurrencyTracker/./src/hooks/useResetConversion.ts","webpack://CurrencyTracker/./src/components/Modals/Exchange/config.ts","webpack://CurrencyTracker/./src/components/Modals/Exchange/styled.ts","webpack://CurrencyTracker/./src/components/Modals/Exchange/index.tsx","webpack://CurrencyTracker/./src/hooks/useExchange.ts","webpack://CurrencyTracker/./src/hooks/useDisableButton.ts","webpack://CurrencyTracker/./src/hooks/useModal.ts","webpack://CurrencyTracker/./src/hooks/usePreventBodyScroll.ts","webpack://CurrencyTracker/./src/store/selectors/stockSelector.ts","webpack://CurrencyTracker/./src/components/Financial/config.ts","webpack://CurrencyTracker/./src/components/Financial/styled.ts","webpack://CurrencyTracker/./src/components/Financial/index.tsx","webpack://CurrencyTracker/./src/pages/Home/styled.ts","webpack://CurrencyTracker/./src/pages/Home/index.tsx"],"sourcesContent":["import { styled } from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n  position: relative;\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n\r\n  width: 100%;\r\n`;\r\n\r\nexport const Subscription = styled.p`\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  border: 2px solid transparent;\r\n  border-radius: 5px;\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  &:focus {\r\n    border: 2px solid ${({ theme }) => theme.colors.activeLink};\r\n  }\r\n`;\r\n\r\nexport const Dropdown = styled.ul`\r\n  position: absolute;\r\n  z-index: 1;\r\n\r\n  width: 100%;\r\n  max-height: ${({ theme }) => theme.size.elementSize.xs};\r\n  overflow-y: auto;\r\n\r\n  border-radius: 5px;\r\n\r\n  margin-top: ${({ theme }) => theme.spacing.s};\r\n`;\r\n\r\nexport const DropdownItem = styled.li`\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.activeLink};\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.xs};\r\n  }\r\n`;\r\n","import { memo, useEffect } from 'react';\r\nimport { useCurrencySearch } from '@hooks/useCurrencySearch';\r\n\r\nimport { inputSubscription, placeholder } from './config';\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  Input,\r\n  InputContainer,\r\n  Subscription,\r\n} from './styled';\r\nimport { CurrencySearchProps } from './types';\r\n\r\nconst CurrencySearch = (props: CurrencySearchProps) => {\r\n  const { excludedCurrency, defaultCurrency, onCurrencyChange } = props;\r\n\r\n  const {\r\n    searchText,\r\n    setSearchText,\r\n    isDropdown,\r\n    filteredCurrencies,\r\n    handleTextChange,\r\n    handleCurrencySelect,\r\n    handleDropdownOpen,\r\n    dropdownRef,\r\n  } = useCurrencySearch(excludedCurrency, onCurrencyChange);\r\n\r\n  useEffect(() => {\r\n    if (defaultCurrency) {\r\n      setSearchText(defaultCurrency);\r\n    }\r\n  }, [defaultCurrency, setSearchText]);\r\n\r\n  return (\r\n    <InputContainer>\r\n      <Subscription>{inputSubscription}</Subscription>\r\n      <Input\r\n        data-testid=\"currency-select-input\"\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={searchText}\r\n        onChange={handleTextChange}\r\n        onFocus={handleDropdownOpen}\r\n      />\r\n      <Dropdown ref={dropdownRef}>\r\n        {isDropdown &&\r\n          filteredCurrencies.map((currency) => (\r\n            <DropdownItem\r\n              key={currency.asset_id}\r\n              onClick={handleCurrencySelect(currency)}\r\n            >\r\n              {currency.name}\r\n            </DropdownItem>\r\n          ))}\r\n      </Dropdown>\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport const MemoizedCurrencySearch = memo(CurrencySearch);\r\n","import { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport { useDebounce } from '@hooks/useDebounce';\r\nimport { useOutsideClick } from '@hooks/useOutsideClick';\r\nimport { selectFilterResultState } from '@store/selectors/currencySelector';\r\nimport { filterCurrencies } from '@store/slices/currencySlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Currency } from '@/types/financial';\r\n\r\nexport const useCurrencySearch = (\r\n  excludedCurrency: string,\r\n  onCurrencyChange: (currencyId: string) => void,\r\n) => {\r\n  const [searchText, setSearchText] = useState<string>('');\r\n  const [isDropdown, setIsDropdown] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const filteredCurrencies = useSelector(selectFilterResultState);\r\n\r\n  const searchItem = useDebounce({ value: searchText, delay: 300 });\r\n  const dropdownRef = useRef<HTMLUListElement | null>(null);\r\n\r\n  const handleTextChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const handleDropdownClose = () => setIsDropdown(false);\r\n  const handleDropdownOpen = () => setIsDropdown(true);\r\n\r\n  const handleCurrencySelect = (currency: Currency) => () => {\r\n    setSearchText(currency.name);\r\n    handleDropdownClose();\r\n    onCurrencyChange(currency.asset_id);\r\n  };\r\n\r\n  useOutsideClick({\r\n    ref: dropdownRef,\r\n    handler: handleDropdownClose,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(filterCurrencies({ searchItem, excludedCurrency }));\r\n  }, [searchItem, excludedCurrency, dispatch]);\r\n\r\n  return {\r\n    searchText,\r\n    setSearchText,\r\n    isDropdown,\r\n    filteredCurrencies,\r\n    handleTextChange,\r\n    handleCurrencySelect,\r\n    handleDropdownOpen,\r\n    dropdownRef,\r\n  };\r\n};\r\n","export const inputSubscription = 'Currency:';\r\nexport const placeholder = 'Choose currency';\r\n","export const pageHeaderData = {\r\n  title: 'Modsen Currency Tracker',\r\n  subtitle: 'Quotes for the dollar and other international currencies.',\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Container = styled.section`\r\n  margin: ${({ theme }) => theme.spacing.xl} 0;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  background: ${({ theme }) => theme.colors.gradientBackground};\r\n\r\n  padding: ${({ theme }) => theme.spacing.xl};\r\n\r\n  border-radius: 15px;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  text-align: end;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.l};\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-right: ${({ theme }) => theme.spacing['3xl']};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    text-align: center;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: ${({ theme }) => theme.font.fontSizes['3xl']};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.bold};\r\n\r\n  background: ${({ theme }) => theme.colors.gradientText};\r\n\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes['2xl']};\r\n  }\r\n`;\r\n\r\nexport const Subtitle = styled.h3`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.l};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    margin: ${({ theme }) => theme.spacing.l} 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${({ theme }) => theme.size.imageSize['3xl']};\r\n  height: ${({ theme }) => theme.size.imageSize['3xl']};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    width: ${({ theme }) => theme.size.imageSize['2xl']};\r\n    height: ${({ theme }) => theme.size.imageSize['2xl']};\r\n  }\r\n`;\r\n","import CurrencyTrackerLogo from '@images/CurrencyTrackerLogo.svg';\r\n\r\nimport { pageHeaderData } from './config';\r\nimport { Container, Image, Subtitle, Title, TitleContainer } from './styled';\r\n\r\nexport const PageHeader = () => {\r\n  return (\r\n    <Container>\r\n      <TitleContainer>\r\n        <Title>{pageHeaderData.title}</Title>\r\n        <Subtitle>{pageHeaderData.subtitle}</Subtitle>\r\n      </TitleContainer>\r\n      <Image src={CurrencyTrackerLogo} />\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { UseDebounceProps } from '@/types/hooks';\r\n\r\nexport const useDebounce = <T>({ value, delay }: UseDebounceProps<T>): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const debounceId = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => clearTimeout(debounceId);\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 5px;\r\n\r\n  background: ${({ theme }) => theme.colors.cardBackground};\r\n\r\n  padding: ${({ theme }) => theme.spacing.l};\r\n\r\n  cursor: pointer;\r\n\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(95%);\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    padding: ${({ theme }) => theme.spacing.m};\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    padding: ${({ theme }) => theme.spacing.s};\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${({ theme }) => theme.size.imageSize.m};\r\n  height: ${({ theme }) => theme.size.imageSize.m};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  margin-left: ${({ theme }) => theme.spacing.m};\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.xs};\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize['2xs']};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  }\r\n`;\r\n\r\nexport const Rate = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  color: ${({ theme }) => theme.colors.cardText};\r\n\r\n  margin-top: ${({ theme }) => theme.spacing.s};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n    margin-top: ${({ theme }) => theme.spacing.xs};\r\n  }\r\n`;\r\n","import Dollar from '@images/quotes/Dollar.svg';\r\n\r\nimport { CardContainer, Image, Info, Rate, Title } from '../styled';\r\nimport { CurrencyCardProps } from './types';\r\n\r\nexport const CurrencyCard = ({ financialItem }: CurrencyCardProps) => {\r\n  const { name, price_usd, icon_url } = financialItem;\r\n\r\n  const cardImage = icon_url ?? Dollar;\r\n  const formattedPrice = '$ ' + price_usd.toFixed(2);\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Image src={cardImage} alt={name} />\r\n      <Info>\r\n        <Title>{name}</Title>\r\n        <Rate>{formattedPrice}</Rate>\r\n      </Info>\r\n    </CardContainer>\r\n  );\r\n};\r\n","import IFIX from '@images/stocks/IFIX.svg';\r\n\r\nimport { CardContainer, Image, Info, Rate, Title } from '../styled';\r\nimport { StockCardProps } from './types';\r\n\r\nexport const StockCard = ({ financialItem }: StockCardProps) => {\r\n  const { name, rate, image } = financialItem;\r\n\r\n  const cardImage = image ?? IFIX;\r\n  const formattedRate = rate + '%';\r\n\r\n  return (\r\n    <CardContainer>\r\n      <Image src={cardImage} alt={name} />\r\n      <Info>\r\n        <Title>{name}</Title>\r\n        <Rate>{formattedRate}</Rate>\r\n      </Info>\r\n    </CardContainer>\r\n  );\r\n};\r\n","export const ErrorMessages = {\r\n  maxValue: 'Value should be less than',\r\n  validAmount: 'Please enter a valid amount',\r\n};\r\n\r\nexport const validationRegex = /^[0-9]*\\.?[0-9]*$/;\r\n\r\nexport const defaultCharactersAmount = 10;\r\n\r\nexport const inputSubscription = 'Amount:';\r\n","import { styled } from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n  border-radius: 5px;\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  &:focus {\r\n    border: 2px solid ${({ theme }) => theme.colors.activeLink};\r\n  }\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: ${({ theme }) => theme.colors.errorText};\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n`;\r\n\r\nexport const Subscription = styled.p`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n`;\r\n","import { ChangeEvent, memo, useCallback, useEffect, useState } from 'react';\r\n\r\nimport {\r\n  defaultCharactersAmount,\r\n  ErrorMessages,\r\n  inputSubscription,\r\n  validationRegex,\r\n} from './config';\r\nimport { ErrorMessage, Input, InputContainer, Subscription } from './styled';\r\nimport { CurrencyAmountInputProps } from './types';\r\n\r\nconst CurrencyAmountInput = (props: CurrencyAmountInputProps) => {\r\n  const { value, onAmountChange, maxLength = defaultCharactersAmount } = props;\r\n\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n\r\n  const handleChange = useCallback(\r\n    (event: ChangeEvent<HTMLInputElement>) => {\r\n      const value = event.target.value;\r\n\r\n      if (value.length > maxLength) {\r\n        setErrorMessage(`${ErrorMessages.maxValue} ${maxLength}`);\r\n        return;\r\n      }\r\n\r\n      if (value === '' || validationRegex.test(value)) {\r\n        setErrorMessage(null);\r\n        setInputValue(value);\r\n        onAmountChange(value);\r\n      } else {\r\n        setErrorMessage(ErrorMessages.validAmount);\r\n        setInputValue(value);\r\n      }\r\n    },\r\n    [maxLength, onAmountChange],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (value !== inputValue) {\r\n      setInputValue(value);\r\n    }\r\n  }, [value, inputValue]);\r\n\r\n  return (\r\n    <InputContainer>\r\n      {errorMessage ? (\r\n        <ErrorMessage data-testid=\"input-error-field\">\r\n          {errorMessage}\r\n        </ErrorMessage>\r\n      ) : (\r\n        <Subscription data-testid=\"input-subscription-field\">\r\n          {inputSubscription}\r\n        </Subscription>\r\n      )}\r\n      <Input\r\n        data-testid=\"currency-amount-input\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n        maxLength={maxLength}\r\n      />\r\n    </InputContainer>\r\n  );\r\n};\r\n\r\nexport const MemoizedCurrencyAmountInput = memo(CurrencyAmountInput);\r\n","import { useAppDispatch } from '@store/hooks';\r\nimport { resetConversionResult } from '@store/slices/currencySlice';\r\n\r\nexport const useResetConversion = () => {\r\n  const dispatch = useAppDispatch();\r\n  const resetConversion = () => {\r\n    dispatch(resetConversionResult());\r\n  };\r\n\r\n  return { resetConversion };\r\n};\r\n","export const ButtonsText = {\r\n  convertButtonText: 'Convert',\r\n  closeButtonText: 'Close',\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background: ${({ theme }) => theme.colors.modalBackground};\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: ${({ theme }) => theme.colors.modalCardBackground};\r\n  padding: ${({ theme }) => theme.spacing.l};\r\n  border-radius: 5px;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize.s};\r\n    padding: ${({ theme }) => theme.spacing.s};\r\n    margin: 0 ${({ theme }) => theme.spacing.l};\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: ${({ theme }) => theme.size.imageSize.l};\r\n  height: ${({ theme }) => theme.size.imageSize.l};\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n\r\n  margin-top: ${({ theme }) => theme.spacing.m};\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n  border-radius: 5px;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  }\r\n`;\r\n\r\nexport const Rate = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  color: ${({ theme }) => theme.colors.cardText};\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  }\r\n`;\r\n\r\nexport const ResultContainer = styled.div`\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n`;\r\n\r\nexport const ResultSubscription = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.xs};\r\n  color: ${({ theme }) => theme.colors.text};\r\n`;\r\n\r\nexport const ResultText = styled.p`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  margin-top: ${({ theme }) => theme.spacing.s};\r\n  padding: ${({ theme }) => theme.spacing.s};\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n\r\n  border-radius: 5px;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.xs};\r\n  width: 100%;\r\n\r\n  text-align: center;\r\n  font-size: ${({ theme }) => theme.font.fontSizes.s};\r\n\r\n  color: ${({ theme }) => theme.colors.primaryText};\r\n\r\n  cursor: pointer;\r\n\r\n  transition: transform 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(95%);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.mobile} {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import { useCallback, useState } from 'react';\r\nimport { MemoizedCurrencySearch as CurrencySearch } from '@components/CurrencySearch';\r\nimport { MemoizedCurrencyAmountInput as CurrencyAmountInput } from '@components/UI/CurrencyAmoutInput';\r\nimport { useDisableButton } from '@hooks/useDisableButton';\r\nimport { useExchange } from '@hooks/useExchange';\r\nimport { useResetConversion } from '@hooks/useResetConversion';\r\nimport Dollar from '@images/quotes/Dollar.svg';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { ButtonsText } from './config';\r\nimport {\r\n  Button,\r\n  ButtonContainer,\r\n  Image,\r\n  Info,\r\n  ModalContainer,\r\n  Overlay,\r\n  Rate,\r\n  ResultContainer,\r\n  ResultSubscription,\r\n  ResultText,\r\n  Title,\r\n} from './styled';\r\nimport { ExchangeModalProps } from './types';\r\n\r\nexport const ExchangeModal = (props: ExchangeModalProps) => {\r\n  const {\r\n    onClose,\r\n    currency: { asset_id, name, icon_url, price_usd },\r\n    modalRef,\r\n  } = props;\r\n\r\n  const cardImage = icon_url ?? Dollar;\r\n  const formattedPrice = '$ ' + price_usd.toFixed(2);\r\n\r\n  const [selectedCurrency, setSelectedCurrency] = useState<string>('');\r\n  const [currencyAmount, setCurrencyAmount] = useState<string>('1');\r\n\r\n  const { resetConversion } = useResetConversion();\r\n\r\n  const { conversionResult, isConverting, conversionError, fetchExchangeRate } =\r\n    useExchange();\r\n\r\n  const numericCurrencyAmount = parseFloat(currencyAmount);\r\n\r\n  const isButtonDisabled = useDisableButton([\r\n    !!selectedCurrency,\r\n    numericCurrencyAmount > 0,\r\n    !isNaN(numericCurrencyAmount),\r\n  ]);\r\n\r\n  const handleCurrencyChange = useCallback(\r\n    (currencyName: string) => {\r\n      setSelectedCurrency(currencyName);\r\n      resetConversion();\r\n    },\r\n    [resetConversion],\r\n  );\r\n\r\n  const handleAmountChange = useCallback((newCurrencyAmount: string) => {\r\n    setCurrencyAmount(newCurrencyAmount);\r\n  }, []);\r\n\r\n  const handleConvert = () => {\r\n    if (\r\n      selectedCurrency &&\r\n      numericCurrencyAmount > 0 &&\r\n      !isNaN(numericCurrencyAmount)\r\n    ) {\r\n      fetchExchangeRate({\r\n        baseCurrency: asset_id,\r\n        amount: numericCurrencyAmount,\r\n        targetCurrency: selectedCurrency,\r\n      });\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <Overlay>\r\n      <ModalContainer ref={modalRef}>\r\n        <Image src={cardImage} alt={name} />\r\n        <Info>\r\n          <Title>{name}</Title>\r\n          <Rate>{formattedPrice}</Rate>\r\n        </Info>\r\n\r\n        <CurrencySearch\r\n          excludedCurrency={name}\r\n          onCurrencyChange={handleCurrencyChange}\r\n        />\r\n\r\n        <CurrencyAmountInput\r\n          value={currencyAmount}\r\n          onAmountChange={handleAmountChange}\r\n        />\r\n\r\n        {isConverting && (\r\n          <ResultContainer data-testid=\"converting-loader\">\r\n            <ResultText>Converting...</ResultText>\r\n          </ResultContainer>\r\n        )}\r\n\r\n        {conversionResult && (\r\n          <ResultContainer data-testid=\"converting-block\">\r\n            <ResultSubscription>{asset_id} =</ResultSubscription>\r\n            <ResultText>\r\n              {conversionResult} {selectedCurrency}\r\n            </ResultText>\r\n          </ResultContainer>\r\n        )}\r\n\r\n        {conversionError && (\r\n          <ResultContainer data-testid=\"converting-error\">\r\n            <ResultText>{conversionError}</ResultText>\r\n          </ResultContainer>\r\n        )}\r\n\r\n        <ButtonContainer>\r\n          <Button\r\n            data-testid=\"convert-button\"\r\n            onClick={handleConvert}\r\n            disabled={isButtonDisabled}\r\n          >\r\n            {ButtonsText.convertButtonText}\r\n          </Button>\r\n          <Button onClick={onClose}>{ButtonsText.closeButtonText}</Button>\r\n        </ButtonContainer>\r\n      </ModalContainer>\r\n    </Overlay>,\r\n    document.body,\r\n  );\r\n};\r\n","import { useAppDispatch, useAppSelector } from '@store/hooks';\r\nimport { selectConversionState } from '@store/selectors/currencySelector';\r\nimport { fetchExchangeRateThunk } from '@store/slices/currencySlice';\r\n\r\nimport { FetchExchangeRate } from '@/types/financial';\r\n\r\nexport const useExchange = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { conversionResult, isConverting, conversionError } = useAppSelector(\r\n    selectConversionState,\r\n  );\r\n  const fetchExchangeRate = ({\r\n    baseCurrency,\r\n    amount,\r\n    targetCurrency,\r\n  }: FetchExchangeRate) => {\r\n    dispatch(fetchExchangeRateThunk({ baseCurrency, amount, targetCurrency }));\r\n  };\r\n\r\n  return {\r\n    conversionResult,\r\n    isConverting,\r\n    conversionError,\r\n    fetchExchangeRate,\r\n  };\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport const useDisableButton = (conditions: boolean[]): boolean => {\r\n  const [isDisabled, setIsDisabled] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!conditions.every((condition) => condition));\r\n  }, [conditions]);\r\n\r\n  return isDisabled;\r\n};\r\n","import { useRef, useState } from 'react';\r\n\r\nimport { useOutsideClick } from './useOutsideClick';\r\nimport { usePreventBodyScroll } from './usePreventBodyScroll';\r\nimport { useResetConversion } from './useResetConversion';\r\n\r\nexport const useModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  const { resetConversion } = useResetConversion();\r\n\r\n  const handleOpen = () => setIsOpen(true);\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n    resetConversion();\r\n  };\r\n\r\n  useOutsideClick({ ref: modalRef, handler: handleClose });\r\n\r\n  usePreventBodyScroll(isOpen);\r\n\r\n  return { isOpen, handleOpen, handleClose, modalRef };\r\n};\r\n","import { useEffect } from 'react';\r\n\r\nexport const usePreventBodyScroll = (isOpen: boolean) => {\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const scrollBarWidth =\r\n        window.innerWidth - document.documentElement.clientWidth;\r\n      document.body.style.overflow = 'hidden';\r\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\r\n    } else {\r\n      document.body.style.overflow = '';\r\n      document.body.style.paddingRight = '';\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = '';\r\n      document.body.style.paddingRight = '';\r\n    };\r\n  }, [isOpen]);\r\n};\r\n","import { RootState } from '@/store';\r\n\r\nexport const selectStocksState = (state: RootState) => state.stocks.stocks;\r\n","export const sectionTitles = {\r\n  quotes: 'Quotes',\r\n  stocks: 'Stocks',\r\n};\r\n\r\nexport const updatedTitle = 'Last updated at:';\r\n","import { styled } from 'styled-components';\r\n\r\nexport const FinancialSection = styled.section`\r\n  max-width: ${({ theme }) => theme.size.elementSize.xl};\r\n  width: 100%;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n\r\n  margin: ${({ theme }) => theme.spacing.xl} 0;\r\n\r\n  padding-bottom: ${({ theme }) => theme.spacing.s};\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.s};\r\n  width: 100%;\r\n\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`;\r\n\r\nexport const GridContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 40px;\r\n\r\n  @media ${({ theme }) => theme.mediaQuery.tablet} {\r\n    grid-template-columns: 1fr;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nexport const TimerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  max-width: ${({ theme }) => theme.size.elementSize.xs};\r\n`;\r\n\r\nexport const Timer = styled.h1`\r\n  text-align: center;\r\n\r\n  font-size: ${({ theme }) => theme.font.fontSizes.m};\r\n  font-weight: ${({ theme }) => theme.font.fontWeights.normal};\r\n`;\r\n","import { useState } from 'react';\r\nimport { CurrencyCard } from '@components/FinancialCard/CurrencyCard';\r\nimport { StockCard } from '@components/FinancialCard/StockCard';\r\nimport { ExchangeModal } from '@components/Modals/Exchange';\r\nimport { useModal } from '@hooks/useModal';\r\nimport { selectCurrenciesState } from '@store/selectors/currencySelector';\r\nimport { selectStocksState } from '@store/selectors/stockSelector';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Currency } from '@/types/financial';\r\n\r\nimport { sectionTitles, updatedTitle } from './config';\r\nimport { FinancialSection, GridContainer, SectionTitle, Timer } from './styled';\r\n\r\nexport const Financial = () => {\r\n  const stocks = useSelector(selectStocksState);\r\n  const {\r\n    data: currencies,\r\n    error,\r\n    lastUpdated,\r\n  } = useSelector(selectCurrenciesState);\r\n  const { isOpen, handleOpen, handleClose, modalRef } = useModal();\r\n  const [selectedCurrency, setSelectedCurrency] = useState<Currency | null>(\r\n    null,\r\n  );\r\n\r\n  const handleCardClick = (currency: Currency) => {\r\n    setSelectedCurrency(currency);\r\n    handleOpen();\r\n  };\r\n\r\n  if (error) {\r\n    return <p data-testid=\"financial-error-message\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <FinancialSection>\r\n      <Timer>\r\n        {updatedTitle} {lastUpdated}\r\n      </Timer>\r\n\r\n      <SectionTitle>{sectionTitles.stocks}</SectionTitle>\r\n      {stocks && (\r\n        <GridContainer>\r\n          {stocks.map((stock) => (\r\n            <StockCard key={stock.id} financialItem={stock} />\r\n          ))}\r\n        </GridContainer>\r\n      )}\r\n\r\n      <SectionTitle>{sectionTitles.quotes}</SectionTitle>\r\n      {currencies && (\r\n        <GridContainer>\r\n          {currencies.map((currency) => (\r\n            <div\r\n              key={currency.asset_id}\r\n              onClick={() => handleCardClick(currency)}\r\n            >\r\n              <CurrencyCard financialItem={currency} />\r\n            </div>\r\n          ))}\r\n        </GridContainer>\r\n      )}\r\n\r\n      {isOpen && selectedCurrency && (\r\n        <ExchangeModal\r\n          onClose={handleClose}\r\n          currency={selectedCurrency}\r\n          modalRef={modalRef}\r\n        />\r\n      )}\r\n    </FinancialSection>\r\n  );\r\n};\r\n","import { styled } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { Financial } from '@components/Financial';\r\nimport { PageHeader } from '@components/PageHeader';\r\n\r\nimport { Container } from './styled';\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <Container>\r\n      <PageHeader />\r\n      <Financial />\r\n    </Container>\r\n  );\r\n};\r\n"],"names":["InputContainer","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","size","elementSize","s","Subscription","p","_templateObject2","_ref2","spacing","_ref3","font","fontSizes","_ref4","colors","primaryText","Input","input","_templateObject3","_ref5","_ref6","_ref7","background","_ref8","_ref9","activeLink","Dropdown","ul","_templateObject4","_ref10","xs","_ref11","DropdownItem","li","_templateObject5","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","mediaQuery","mobile","_ref18","CurrencySearch","props","excludedCurrency","defaultCurrency","_useCurrencySearch","onCurrencyChange","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","isDropdown","setIsDropdown","dispatch","useDispatch","filteredCurrencies","useSelector","selectFilterResultState","searchItem","useDebounce","value","delay","dropdownRef","useRef","handleDropdownClose","useOutsideClick","ref","handler","useEffect","filterCurrencies","handleTextChange","event","target","handleCurrencySelect","currency","name","asset_id","handleDropdownOpen","useCurrencySearch","_jsxs","children","_jsx","type","placeholder","onChange","onFocus","map","onClick","MemoizedCurrencySearch","memo","pageHeaderData","Container","section","xl","gradientBackground","tablet","TitleContainer","l","Title","h1","fontWeights","bold","gradientText","Subtitle","h3","normal","Image","img","imageSize","_ref19","_ref20","_ref21","_ref22","PageHeader","src","CurrencyTrackerLogo","debouncedValue","setDebouncedValue","debounceId","setTimeout","clearTimeout","CardContainer","cardBorder","cardBackground","m","Info","Rate","cardText","_ref23","CurrencyCard","financialItem","price_usd","icon_url","cardImage","Dollar","formattedPrice","toFixed","alt","StockCard","rate","image","IFIX","formattedRate","ErrorMessages","validationRegex","ErrorMessage","errorText","text","CurrencyAmountInput","onAmountChange","_props$maxLength","maxLength","inputValue","setInputValue","errorMessage","setErrorMessage","handleChange","useCallback","length","concat","test","MemoizedCurrencyAmountInput","useResetConversion","useAppDispatch","resetConversion","resetConversionResult","ButtonsText","Overlay","modalBackground","ModalContainer","modalCardBackground","_templateObject6","_ref24","ResultContainer","_templateObject7","_ref25","_ref26","_ref27","ResultSubscription","_templateObject8","_ref28","_ref29","ResultText","_templateObject9","_ref30","_ref31","Button","button","_templateObject10","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","ButtonContainer","_templateObject11","_ref40","_ref41","ExchangeModal","_useAppSelector","onClose","_props$currency","modalRef","selectedCurrency","setSelectedCurrency","currencyAmount","setCurrencyAmount","_useExchange","conversionResult","useAppSelector","selectConversionState","isConverting","conversionError","fetchExchangeRate","baseCurrency","amount","targetCurrency","fetchExchangeRateThunk","numericCurrencyAmount","parseFloat","isButtonDisabled","conditions","isDisabled","setIsDisabled","every","condition","useDisableButton","isNaN","handleCurrencyChange","currencyName","handleAmountChange","newCurrencyAmount","createPortal","disabled","document","body","useModal","isOpen","setIsOpen","handleClose","scrollBarWidth","window","innerWidth","documentElement","clientWidth","style","overflow","paddingRight","usePreventBodyScroll","handleOpen","selectStocksState","state","stocks","sectionTitles","FinancialSection","SectionTitle","h2","GridContainer","Timer","Financial","_useSelector","selectCurrenciesState","currencies","data","error","lastUpdated","_useModal","stock","id","handleCardClick","Home"],"sourceRoot":""}